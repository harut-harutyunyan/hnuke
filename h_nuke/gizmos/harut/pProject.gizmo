Group {
 inputs 3
 name pProject
 knobChanged "\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"moving_target\":\n    val = k.getValue() == 1\n    n.begin()\n    ax_in = nuke.toNode(\"axis\")\n    if val:\n        inpt = nuke.nodes.Input(name=\"axis\")\n        inpt.setXYpos(248, -515)\n        nuke.toNode(\"DummyAxis\").setInput(0, inpt)\n    elif not val and ax_in:\n        nuke.delete(ax_in)\n    n.end()\nif k.name() == \"mask_normal\":\n    val = k.getValue() == 1\n    n\[\"in_1\"].setEnabled(val)\n    n\[\"invert_n\"].setVisible(val)\n    n\[\"normal_contrast\"].setVisible(val)\n    n\[\"normal_mult\"].setVisible(val)\n    n\[\"normal_mix\"].setVisible(val)\n"
 onCreate "\nn = nuke.thisNode()\nn\[\"in_1\"].setEnabled(n\[\"mask_normal\"].getValue()==1)\n"
 tile_color 0x8535d5ff
 lock_connections true
 addUserKnob {20 pProject}
 addUserKnob {41 in l "position data" T P.in}
 addUserKnob {41 in_1 l "normal data" T N.in}
 addUserKnob {26 ""}
 addUserKnob {3 prj_frame l "projection frame"}
 prj_frame 1001
 addUserKnob {22 set_prj_frame l "set to current" -STARTLINE T "nuke.thisNode()\[\"prj_frame\"].setValue(int(nuke.frame()))"}
 addUserKnob {26 "" +STARTLINE}
 addUserKnob {6 moving_target l "moving target" +STARTLINE}
 addUserKnob {6 projection_only l "projection only" -STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {6 mask_normal l "mask by normal" +STARTLINE}
 addUserKnob {6 invert_n l "invert normal" -STARTLINE +HIDDEN}
 addUserKnob {7 normal_contrast l contrast +HIDDEN}
 addUserKnob {7 normal_mult l multiply +HIDDEN R 1 4}
 normal_mult 1
 addUserKnob {7 normal_mix l mix +HIDDEN}
 normal_mix 1
 addUserKnob {26 ""}
 addUserKnob {26 credit l "" +STARTLINE T "<font style=\"color:#666\"><br/><b>Harut Harutyunyan</b> - har8unyan@gmail.com</font>"}
 addUserKnob {20 Advanced}
 addUserKnob {6 calc_v l "calculate vaperture" t "calculate fov based on image aspect ratio" -STARTLINE}
 calc_v true
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x8e388e00
  label "cam\nspace"
  note_font_size 42
  xpos -178
  ypos 31
  bdwidth 175
  bdheight 212
 }
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x7171c600
  label "proj\nspace"
  note_font_size 42
  xpos -176
  ypos 354
  bdwidth 181
  bdheight 356
 }
 BackdropNode {
  inputs 0
  name BackdropNode3
  tile_color 0x7171c600
  label pref
  note_font_size 42
  xpos -181
  ypos -463
  bdwidth 181
  bdheight 376
 }
 Input {
  inputs 0
  name img
  xpos -138
  ypos -589
 }
set Ncda36000 [stack 0]
 Dot {
  name Dot2
  xpos -576
  ypos -586
 }
 Dot {
  name Dot4
  xpos -576
  ypos 1065
 }
set Ncda35800 [stack 0]
 Dot {
  name Dot5
  xpos -576
  ypos 1545
 }
set Ne352f400 [stack 0]
push $Ncda35800
 Dot {
  name Dot3
  xpos -382
  ypos 1065
 }
set Ncda35400 [stack 0]
 Shuffle {
  in rgb
  red black
  green black
  blue black
  alpha black
  name Shuffle2
  xpos -416
  ypos 1157
 }
 Add {
  channels rgb
  value {{parent.DummyCam.world_matrix.2} {parent.DummyCam.world_matrix.6} {parent.DummyCam.world_matrix.10} 0}
  name color
  xpos -416
  ypos 1213
 }
push $Ncda35400
 Shuffle {
  in N
  alpha blue
  name N
  xpos -295
  ypos 1159
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge1
  xpos -295
  ypos 1213
 }
 Clamp {
  channels rgb
  name Clamp1
  xpos -295
  ypos 1250
 }
 Saturation {
  saturation 0
  name Saturation1
  xpos -295
  ypos 1274
 }
 Grade {
  blackpoint 0.5
  whitepoint 0
  name invert
  xpos -295
  ypos 1298
  disable {{!invert_n}}
 }
 Grade {
  blackpoint {{"lerp(0, 0, 1, 0.5, parent.normal_contrast)"}}
  whitepoint {{1-blackpoint}}
  multiply {{normal_mult}}
  white_clamp true
  name Grade1
  xpos -295
  ypos 1399
 }
push $Ncda36000
 Shuffle {
  in P
  name P
  xpos -138
  ypos -543
 }
 Add {
  value {{parent.DummyAxis.world_matrix.3*-1} {parent.DummyAxis.world_matrix.7*-1} {parent.DummyAxis.world_matrix.11*-1} 0}
  name Add3
  xpos -138
  ypos -348
 }
 ColorMatrix {
  matrix {
      {{parent.DummyAxis.world_matrix.0} {parent.DummyAxis.world_matrix.1} {parent.DummyAxis.world_matrix.2}}
      {{parent.DummyAxis.world_matrix.4} {parent.DummyAxis.world_matrix.5} {parent.DummyAxis.world_matrix.6}}
      {{parent.DummyAxis.world_matrix.8} {parent.DummyAxis.world_matrix.9} {parent.DummyAxis.world_matrix.10}}
    }
  invert true
  name ColorMatrix3
  xpos -138
  ypos -269
 }
 ColorMatrix {
  matrix {
      {{parent.DummyAxis.world_matrix.0(parent.prj_frame)} {parent.DummyAxis.world_matrix.1(parent.prj_frame)} {parent.DummyAxis.world_matrix.2(parent.prj_frame)}}
      {{parent.DummyAxis.world_matrix.4(parent.prj_frame)} {parent.DummyAxis.world_matrix.5(parent.prj_frame)} {parent.DummyAxis.world_matrix.6(parent.prj_frame)}}
      {{parent.DummyAxis.world_matrix.8(parent.prj_frame)} {parent.DummyAxis.world_matrix.9(parent.prj_frame)} {parent.DummyAxis.world_matrix.10(parent.prj_frame)}}
    }
  name ColorMatrix4
  xpos -138
  ypos -212
 }
 Add {
  value {{parent.DummyAxis.world_matrix.3(parent.prj_frame)} {parent.DummyAxis.world_matrix.7(parent.prj_frame)} {parent.DummyAxis.world_matrix.11(parent.prj_frame)} 0}
  name Add4
  xpos -138
  ypos -143
 }
 Add {
  value {{parent.DummyCam.world_matrix.3(prj_frame)*-1} {parent.DummyCam.world_matrix.7(prj_frame)*-1} {parent.DummyCam.world_matrix.11(prj_frame)*-1} 0}
  name Add2
  xpos -138
  ypos 148
 }
 ColorMatrix {
  matrix {
      {{parent.DummyCam.world_matrix.0(prj_frame)} {parent.DummyCam.world_matrix.1(prj_frame)} {parent.DummyCam.world_matrix.2(prj_frame)}}
      {{parent.DummyCam.world_matrix.4(prj_frame)} {parent.DummyCam.world_matrix.5(prj_frame)} {parent.DummyCam.world_matrix.6(prj_frame)}}
      {{parent.DummyCam.world_matrix.8(prj_frame)} {parent.DummyCam.world_matrix.9(prj_frame)} {parent.DummyCam.world_matrix.10(prj_frame)}}
    }
  invert true
  name ColorMatrix2
  xpos -138
  ypos 195
 }
 NoOp {
  name fov
  xpos -138
  ypos 483
  addUserKnob {20 User}
  addUserKnob {7 calc_vaperture}
  calc_vaperture {{parent.calc_v==1?DummyCam.haperture(prj_frame)/(input.width/input.height):DummyCam.vaperture(prj_frame)}}
  addUserKnob {7 v_fov}
  v_fov {{atan(calc_vaperture/(2*parent.DummyCam.focal(prj_frame)))}}
  addUserKnob {7 h_fov}
  h_fov {{atan(parent.DummyCam.haperture(prj_frame)/(2*parent.DummyCam.focal(prj_frame)))}}
 }
 ColorMatrix {
  matrix {
      {{1/tan(input.h_fov)} 0 0}
      {0 {1/tan(input.v_fov)} 0}
      {0 0 {((parent.DummyCam.far(prj_frame)+parent.DummyCam.near(prj_frame))/(parent.DummyCam.far(prj_frame)-parent.DummyCam.near(prj_frame)))*-1}}
    }
  name ColorMatrix1
  xpos -138
  ypos 532
 }
 Add {
  value {0 0 {((2*(parent.DummyCam.far(prj_frame)*parent.DummyCam.near(prj_frame)))/(parent.DummyCam.far(prj_frame)-parent.DummyCam.near(prj_frame)))*-1} 0}
  name Add1
  xpos -138
  ypos 574
 }
 Expression {
  expr0 r/b
  expr1 g/b
  expr2 0
  name Expression1
  xpos -138
  ypos 636
 }
 Expression {
  expr0 (r+1)/2
  expr1 (g+1)/2
  name Expression2
  xpos -138
  ypos 676
 }
 Input {
  inputs 0
  name prj
  xpos 294
  ypos 793
  number 2
 }
 FrameHold {
  first_frame {{prj_frame}}
  name FrameHold1
  xpos 294
  ypos 851
 }
 BlackOutside {
  name BlackOutside1
  xpos 294
  ypos 930
 }
 STMap {
  inputs 2
  uv rgb
  name STMap1
  xpos -138
  ypos 924
 }
 Merge2 {
  inputs 2
  operation multiply
  Achannels {rgba.red rgba.green rgba.blue -rgba.alpha}
  Bchannels {rgba.red rgba.green rgba.blue -rgba.alpha}
  output {rgba.red rgba.green rgba.blue -rgba.alpha}
  mix {{normal_mix}}
  name Merge2
  xpos -138
  ypos 1399
  disable {{!parent.mask_normal}}
 }
 Merge2 {
  inputs 2
  operation under
  name Merge3
  xpos -138
  ypos 1542
  disable {{projection_only}}
 }
push $Ne352f400
 Dot {
  name Dot1
  xpos -576
  ypos 1596
 }
 Switch {
  inputs 2
  which {{"\[exists parent.input1]"}}
  name Switch1
  xpos -138
  ypos 1593
 }
 Output {
  name Output1
  xpos -138
  ypos 1722
 }
 Camera {
  inputs 0
  name DummyAxis
  xpos 258
  ypos -358
  addUserKnob {20 DummyCam l Defaults}
  addUserKnob {43 the_cam +INVISIBLE}
  the_cam "\[\n#DummyCam v1.3 - Updated 5 May 2021.\nset starting_point \"this.input0\"\nset default \"this.d_\"\n\n# If cam has no inputs, return the default.\nif \{\[exists \$starting_point]\} \{\n    set x \[node \$starting_point]\n\} \{ \n    return \$default\n\}\n\nset finished 0\nwhile \{\$finished != 1\} \{\n\n    # First look for a Cam or Input or topnode.\n    while \{\[class \$x] != \"Camera3\" && \[class \$x] != \"Camera2\" && \[class \$x] != \"Camera\" && \[class \$x] != \"Input\" && \$x != \[topnode \$x]\} \{\n        set x \[node \$x.input0]\n    \}\n\n    # Then, check if node is a cam (and return), and otherwise, if it's an input, see if the parent exists and move to it.\n    if \{\[class \$x]==\"Camera3\"||\[class \$x]==\"Camera2\"||\[class \$x]==\"Camera\"\} \{\n        set x \[append x \".\"]\n        return \$x\n    \} \{ \n        if \{ \[class \$x]==\"Input\" \} \{ \n            set inp \"\$x.parent.input\"\n            set inputNum \[value \$x.number]\n            set inp \[append inp \$inputNum]\n            if \{ \[exists \$inp] \} \{\n                set x \[node \$inp]\n            \} \{ \n                set finished 1\n            \}\n        \} \{ \n            set finished 1\n        \}\n    \}\n\}\nreturn \$default\n]"
  addUserKnob {43 the_frame +INVISIBLE}
  the_frame "\[\nset the_camera \[string trimright \[value the_cam] .]\nif \{\[exists \$the_camera]\} \{\n    return \[value \$the_camera.frame]\n\} \{ \n    return \[frame]\n\}\n]"
 }
 Input {
  inputs 0
  name cam
  xpos 248
  ypos -53
  number 1
 }
 Camera {
  projection_mode {{"\[expression \[value the_cam]projection_mode(\[value the_frame])]"}}
  focal {{"\[expression \[value the_cam]focal(\[value the_frame])]"}}
  haperture {{"\[expression \[value the_cam]haperture(\[value the_frame])]"}}
  vaperture {{"\[expression \[value the_cam]vaperture(\[value the_frame])]"}}
  near {{"\[expression \[value the_cam]near(\[value the_frame])]"}}
  far {{"\[expression \[value the_cam]far(\[value the_frame])]"}}
  win_translate {{"\[expression \[value the_cam]win_translate.u(\[value the_frame])]"} {"\[expression \[value the_cam]win_translate.v(\[value the_frame])]"}}
  win_scale {{"\[expression \[value the_cam]win_scale.u(\[value the_frame])]"} {"\[expression \[value the_cam]win_scale.v(\[value the_frame])]"}}
  winroll {{"\[expression \[value the_cam]winroll(\[value the_frame])]"}}
  focal_point {{"\[expression \[value the_cam]focal_point(\[value the_frame])]"}}
  fstop {{"\[expression \[value the_cam]fstop(\[value the_frame])]"}}
  name DummyCam
  help "DummyCam by Adrian Pueyo\n\nCamera that apart from the matrices also grabs all the \"Projection\" values from the upstream camera that it's connected to. Turns into a default Camera if no Camera connected. Can also be used inside of groups and gizmos, as many levels deep as you want :D All using live and super fast TCL.\n\nUpdated v1.1: Now grabs the correct frame too (thanks Erwan Leroy for the idea).\n\nUpdated v1.3: Now accepts Nuke13's Camera3\n\nadrianpueyo.com, 2019-2021"
  onCreate "n = nuke.thisNode()\nfor k in \[\"projection_mode\",\"focal\",\"haperture\",\"vaperture\",\"near\",\"far\",\"win_translate\",\"win_scale\",\"winroll\",\"focal_point\",\"fstop\"]:\n    n\[k].setFlag(0x0000000010000000)"
  xpos 258
  ypos 169
  addUserKnob {20 DummyCam l Defaults}
  addUserKnob {43 the_cam +INVISIBLE}
  the_cam "\[\n#DummyCam v1.3 - Updated 5 May 2021.\nset starting_point \"this.input0\"\nset default \"this.d_\"\n\n# If cam has no inputs, return the default.\nif \{\[exists \$starting_point]\} \{\n    set x \[node \$starting_point]\n\} \{ \n    return \$default\n\}\n\nset finished 0\nwhile \{\$finished != 1\} \{\n\n    # First look for a Cam or Input or topnode.\n    while \{\[class \$x] != \"Camera3\" && \[class \$x] != \"Camera2\" && \[class \$x] != \"Camera\" && \[class \$x] != \"Input\" && \$x != \[topnode \$x]\} \{\n        set x \[node \$x.input0]\n    \}\n\n    # Then, check if node is a cam (and return), and otherwise, if it's an input, see if the parent exists and move to it.\n    if \{\[class \$x]==\"Camera3\"||\[class \$x]==\"Camera2\"||\[class \$x]==\"Camera\"\} \{\n        set x \[append x \".\"]\n        return \$x\n    \} \{ \n        if \{ \[class \$x]==\"Input\" \} \{ \n            set inp \"\$x.parent.input\"\n            set inputNum \[value \$x.number]\n            set inp \[append inp \$inputNum]\n            if \{ \[exists \$inp] \} \{\n                set x \[node \$inp]\n            \} \{ \n                set finished 1\n            \}\n        \} \{ \n            set finished 1\n        \}\n    \}\n\}\nreturn \$default\n]"
  addUserKnob {43 the_frame +INVISIBLE}
  the_frame "\[\nset the_camera \[string trimright \[value the_cam] .]\nif \{\[exists \$the_camera]\} \{\n    return \[value \$the_camera.frame]\n\} \{ \n    return \[frame]\n\}\n]"
  addUserKnob {4 d_projection_mode l projection M {perspective orthographic uv spherical ""}}
  addUserKnob {7 d_focal l "focal length" R 0 100}
  d_focal 50
  addUserKnob {7 d_haperture l "horiz aperture" R 0 50}
  d_haperture 24.576
  addUserKnob {7 d_vaperture l "vert aperture" R 0 50}
  d_vaperture 18.672
  addUserKnob {7 d_near l near R 0 10}
  d_near 0.1
  addUserKnob {7 d_far l far R 0 10000}
  d_far 10000
  addUserKnob {30 d_win_translate l "window translate"}
  addUserKnob {30 d_win_scale l "window scale"}
  d_win_scale {1 1}
  addUserKnob {7 d_winroll l "window roll" R 0 45}
  addUserKnob {7 d_focal_point l "focal distance" R 0 10}
  d_focal_point 2
  addUserKnob {7 d_fstop l fstop R 0 30}
  d_fstop 16
 }
end_group
