Group {
 name Turbulate
 knobChanged "\n\nn = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"inputChange\":\n    map = n.input(1)\n    if map:\n        val = False\n    else:\n        val = True\n    n\[\"divv\"].setVisible(val)\n    n\[\"detail\"].setVisible(val)\n    n\[\"boil\"].setVisible(val)\n    n\[\"noisescale\"].setVisible(val)\n    n\[\"noiseoffset\"].setVisible(val)\n"
 tile_color 0x8535d5ff
 lock_connections true
 addUserKnob {20 turbulate l Turbulate}
 addUserKnob {3 iterations}
 iterations 1
 addUserKnob {6 grow l "grow strength" -STARTLINE}
 addUserKnob {14 size R 0 100}
 size 10
 addUserKnob {26 ""}
 addUserKnob {41 blur_size l blur T Blur1.size}
 addUserKnob {7 angle R 0 360}
 addUserKnob {26 divv l "" +STARTLINE}
 addUserKnob {3 detail -STARTLINE}
 detail 6
 addUserKnob {7 boil R 0 10}
 addUserKnob {30 noisescale l scale}
 noisescale {5 5}
 addUserKnob {30 noiseoffset l offset}
 addUserKnob {26 ""}
 addUserKnob {26 credit l "" +STARTLINE T "<font style=\"color:#666\"><br/><b>Harut Harutyunyan</b> - har8unyan@gmail.com</font>"}
}
 Input {
  inputs 0
  name mask
  xpos -536
  ypos 357
  number 2
 }
 Invert {
  channels alpha
  name Invert1
  xpos -536
  ypos 400
 }
 Expression {
  channel0 {-rgba.red -rgba.green -rgba.blue none}
  channel1 {-rgba.red -rgba.green -rgba.blue none}
  channel2 {-rgba.red -rgba.green -rgba.blue none}
  expr3 a
  name Expression2
  xpos -536
  ypos 436
 }
 Input {
  inputs 0
  name map
  xpos -342
  ypos -152
  number 1
 }
 Input {
  inputs 0
  name Input
  xpos -115
  ypos -152
 }
set N2b487280 [stack 0]
 Remove {
  name Remove2
  xpos -225
  ypos -158
 }
 Noise {
  output {rgba.red -rgba.green -rgba.blue none}
  size {{noisescale.u*100} {noisescale.v*100}}
  zoffset {{boil/10}}
  octaves {{detail}}
  translate {{noiseoffset.u} {noiseoffset.v}}
  center {960 540}
  name Noise1
  xpos -225
  ypos -92
 }
 Switch {
  inputs 2
  which {{"\[exists parent.input1]"}}
  name Switch1
  xpos -342
  ypos -92
 }
 Blur {
  channels {rgba.red -rgba.green -rgba.blue none}
  name Blur1
  xpos -342
  ypos -62
 }
 Shuffle {
  red black
  green black
  blue black
  alpha red
  name Shuffle10
  xpos -342
  ypos -16
 }
 Dot {
  name Dot2
  xpos -308
  ypos 26
 }
set N2bed07c0 [stack 0]
 Matrix {
  channels alpha
  matrix {
      {3 0 -3}
      {10 0 -10}
      {3 0 -3}
    }
  name Scharr_operator_x1
  xpos -608
  ypos 235
 }
push $N2bed07c0
 Matrix {
  channels alpha
  matrix {
      {3 10 3}
      {0 0 0}
      {-3 -10 -3}
    }
  name Scharr_operator_y1
  xpos -490
  ypos 173
 }
push $N2bed07c0
 Remove {
  name Remove1
  xpos -342
  ypos 100
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.red
  name Copy3
  xpos -342
  ypos 173
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.green
  name Copy4
  xpos -342
  ypos 235
 }
 ColorMatrix {
  matrix {
      {{parent.Axis1.matrix.0} {parent.Axis1.matrix.1} {parent.Axis1.matrix.2}}
      {{parent.Axis1.matrix.4} {parent.Axis1.matrix.5} {parent.Axis1.matrix.6}}
      {{parent.Axis1.matrix.8} {parent.Axis1.matrix.9} {parent.Axis1.matrix.10}}
    }
  name ColorMatrix1
  xpos -342
  ypos 321
 }
 BlinkScript {
  recompileCount 11
  ProgramGroup 1
  KernelDescription "2 \"WarpKernel\" iterate pixelWise 4cdc596c8a521bd8d19cc9f7a13660bf0c7af9797719429deaf79367b8c7e59d 2 \"vectors\" Read Random \"dst\" Write Point 3 \"samples\" Int 1 AAAAAA== \"mult\" Bool 1 AA== \"strength\" Float 2 AAAAAAAAAAA= 3 \"samples\" 1 1 \"mult\" 1 1 \"strength\" 2 1 0"
  kernelSource "kernel WarpKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> vectors; // the input image\n  Image<eWrite> dst; // the output image\n\n  param:\n    int samples;\n    bool mult;\n    float2 strength;\n\n  void process(int2 pos) \{\n    float2 fpos = float2(pos.x, pos.y);\n    float4 disp;\n    float2 scale = strength;\n    if (mult == 0)\{\n        scale *= 10;\n    \}\n\n    for (int i=0; i<samples; i++)\n    \{\n      disp = bilinear(vectors, fpos.x, fpos.y);\n      fpos += float2(disp.x*scale.x, disp.y*scale.y)/samples;\n      if (mult == 1)\{\n        scale *= 2;\n      \}\n    \}\n\n    float2 result = fpos - float2(pos.x, pos.y);\n    dst() = float4(result.x, result.y, 0.0f, 0.0f);\n  \}\n\};\n"
  rebuild ""
  WarpKernel_samples {{parent.iterations}}
  WarpKernel_mult {{parent.grow}}
  WarpKernel_strength {{size.w} {size.h}}
  rebuild_finalise ""
  name BlinkScript2
  selected true
  xpos -342
  ypos 379
 }
 Multiply {
  inputs 1+1
  channels {rgba.red rgba.green -rgba.blue none}
  value 0
  name Multiply1
  xpos -342
  ypos 436
  disable {{"!\[exists parent.input2]"}}
 }
 Expression {
  expr0 (r+x+0.5)/width
  expr1 (g+y+0.5)/height
  channel2 {-rgba.red -rgba.green -rgba.blue none}
  channel3 {none none none -rgba.alpha}
  name Expression1
  xpos -342
  ypos 486
 }
push $N2b487280
 STMap {
  inputs 2
  uv rgb
  name STMap1
  xpos -115
  ypos 480
 }
 Output {
  name Output1
  xpos -115
  ypos 557
 }
 Axis {
  inputs 0
  rotate {0 0 {angle}}
  name Axis1
  xpos -430
  ypos 297
 }
end_group
